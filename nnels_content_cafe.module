<?php

module_load_include('inc', 'nnels_content_cafe', 'nnels_content_cafe.class');
module_load_include('inc', 'nnels_content_cafe', 'nnels_content_cafe');

/**
 * Implements hook_permission().
 */
function nnels_content_cafe_permission() {
  return array(
    'administer nnels content cafe' => array(
      'title'       => t('Administer NNELS content cafe'),
      'description' => t('Perform administration tasks for NNELS content cafe.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function nnels_content_cafe_menu() {
  $items = array();

  // Settings Pages
  $items['admin/config/nnels'] = array(
    'title'            => 'NNELS Configuration',
    'description'      => 'Manage configuration for NNELS Custom Modules.',
    'position'         => 'right',
    'page callback'    => 'system_admin_menu_block_page',
    'access arguments' => array('administer nnels content cafe'),
    'file'             => 'system.admin.inc',
    'file path'        => drupal_get_path('module', 'system'),
    'weight'           => 30,
  );
  $items['admin/config/nnels/settings'] = array(
    'title'            => 'Content Cafe API Settings',
    'description'      => 'API Settings',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('nnels_content_cafe_settings_form'),
    'access arguments' => array('administer nnels content cafe'),
    'file'             => 'nnels_content_cafe.admin.inc',
    'file path'        => drupal_get_path('module', 'nnels_content_cafe'),
  );
  $items['admin/config/nnels/tests'] = array(
    'title'            => 'Content Cafe API Test Calls',
    'description'      => 'Test Content Cafe API Calls',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('nnels_content_cafe_test_form'),
    'access arguments' => array('administer nnels content cafe'),
    'file'             => 'nnels_content_cafe.admin.inc',
    'file path'        => drupal_get_path('module', 'nnels_content_cafe'),
  );
  $items['admin/config/nnels/repository_items'] = array(
    'title'            => 'Repository Items with ISBN Numbers',
    'description'      => 'A list of repository items that have content cafe API data attached.',
    'page callback'    => 'nnels_content_cafe_repository_item_list',
    'access arguments' => array('administer nnels content cafe'),
    'file'             => 'nnels_content_cafe.admin.inc',
    'file path'        => drupal_get_path('module', 'nnels_content_cafe'),
  );
  $items['admin/config/nnels/invalid_isbns'] = array(
    'title'            => 'Repository Items with invalid ISBN Numbers',
    'description'      => 'A list of repository items that have invalid ISBN numbers.',
    'page callback'    => 'nnels_content_cafe_repository_invalid_isbn_list',
    'access arguments' => array('administer nnels content cafe'),
    'file'             => 'nnels_content_cafe.admin.inc',
    'file path'        => drupal_get_path('module', 'nnels_content_cafe'),
  );

  // Node Pages
  $items['node/%/content_cafe'] = array(
    'title'            => 'Content Cafe',
    'description'      => 'Data from the Content Cafe API',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('nnels_content_cafe_overview_form', 1),
    'access callback'  => 'nnels_content_cafe_access',
    'access arguments' => array(1),
    'file'             => 'nnels_content_cafe.admin.inc',
    'file path'        => drupal_get_path('module', 'nnels_content_cafe'),
    'type'             => MENU_LOCAL_TASK,
    'weight'           => 50,
  );
  $items['node/%/content_cafe/annotation/%/edit'] = array(
    'title'            => 'Edit Annotation',
    'description'      => 'Edit a specic annotation for a repository item.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('nnels_content_cafe_annotation_edit_form', 1, 4),
    'access callback'  => 'nnels_content_cafe_access',
    'access arguments' => array(1),
    'file'             => 'nnels_content_cafe.admin.inc',
    'file path'        => drupal_get_path('module', 'nnels_content_cafe'),
  );
  $items['node/%/content_cafe/biography/%/edit'] = array(
    'title'            => 'Edit Biography',
    'description'      => 'Edit a specic biography for a repository item.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('nnels_content_cafe_biography_edit_form', 1, 4),
    'access callback'  => 'nnels_content_cafe_access',
    'access arguments' => array(1),
    'file'             => 'nnels_content_cafe.admin.inc',
    'file path'        => drupal_get_path('module', 'nnels_content_cafe'),
  );
  $items['node/%/content_cafe/excerpt/%/edit'] = array(
    'title'            => 'Edit Excerpt',
    'description'      => 'Edit a specic excerpt for a repository item.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('nnels_content_cafe_excerpt_edit_form', 1, 4),
    'access callback'  => 'nnels_content_cafe_access',
    'access arguments' => array(1),
    'file'             => 'nnels_content_cafe.admin.inc',
    'file path'        => drupal_get_path('module', 'nnels_content_cafe'),
  );
  $items['node/%/content_cafe/flap/%/edit'] = array(
    'title'            => 'Edit Flap',
    'description'      => 'Edit a specic flap for a repository item.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('nnels_content_cafe_flap_edit_form', 1, 4),
    'access callback'  => 'nnels_content_cafe_access',
    'access arguments' => array(1),
    'file'             => 'nnels_content_cafe.admin.inc',
    'file path'        => drupal_get_path('module', 'nnels_content_cafe'),
  );
  $items['node/%/content_cafe/jacket/%/edit'] = array(
    'title'            => 'Edit Jacket',
    'description'      => 'Edit a specic jacket for a repository item.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('nnels_content_cafe_jacket_edit_form', 1, 4),
    'access callback'  => 'nnels_content_cafe_access',
    'access arguments' => array(1),
    'file'             => 'nnels_content_cafe.admin.inc',
    'file path'        => drupal_get_path('module', 'nnels_content_cafe'),
  );
  $items['node/%/content_cafe/toc/%/edit'] = array(
    'title'            => 'Edit TOC',
    'description'      => 'Edit a specic toc for a repository item.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('nnels_content_cafe_toc_edit_form', 1, 4),
    'access callback'  => 'nnels_content_cafe_access',
    'access arguments' => array(1),
    'file'             => 'nnels_content_cafe.admin.inc',
    'file path'        => drupal_get_path('module', 'nnels_content_cafe'),
  );
  
//  // Handle image styles generated by the module. This is very specific to this
//  // sites. The path must use the s3 file system and images must be inside the
//  // book-covers/ folder.
//  $items['system/files/styles/%image_style/s3/book-covers/%image_name'] = array(
//    'title'            => 'Image style delivery callback',
//    'description'      => 'Callback to generate an image derivative, upload it to S3, and redirect to the S3 URL',
//    'page callback'    => 'nnels_content_cafe_image_deliver',
//    'page arguments'   => array(3, 6),
//    'access arguments' => array('access content'),
//    'type'             => MENU_CALLBACK,
//  );

  return $items;
}

function nnels_content_cafe_menu_alter(&$items) {
  $items['system/files/styles/%image_style']['page callback'] = 'nnels_content_cafe_image_deliver';
}

/**
 * Access callback for node/%/content_cafe and all child pages.
 */
function nnels_content_cafe_access($node) {

  // Get the node type.
  $node_type = db_select('node', 'n')
    ->fields('n', array('type'))
    ->condition('n.nid', $node)
    ->execute()
    ->fetchField();

  // Check access by node type and permissions.
  $return = FALSE;
  if ($node_type == 'repository_item') {
    if (user_access('administer nnels content cafe')) {
      $return = TRUE;
    }
  }

  return $return;
}

/**
 * Implements hook_admin_paths().
 */
function nnels_content_cafe_admin_paths() {
  $paths = array(
    'node/*/content_cafe'   => TRUE,
    'node/*/content_cafe/*' => TRUE,
  );

  return $paths;
}

/**
 * Implements hook_views_api().
 */
function nnels_content_cafe_views_api() {
  return array(
    'api' => 3,
  );
}

/**
 * Implements hook_views_post_execute().
 */
function nnels_content_cafe_views_post_execute(&$view) {

  // Selected Annotation field.
  if (isset($view->field['content_cafe_selected_annotation'])) {

    // Get a list of nodes so the data can be selected in a bulk fashion.
    $nids = array();
    foreach ($view->result as $result) {
      $nids[] = $result->nid;
    }
    $annotations = nnels_content_cafe_select_multiple_content_cafe_annotation_rows_by_nids($nids);
    
    // Update the results with the data.
    foreach ($view->result as $result) {
      if (isset($annotations[$result->nid])) {
        foreach ($annotations[$result->nid] as $annotation) {
          if ($annotation->selected) {
            $result->content_cafe_selected_annotation = $annotation->annotation;
          }
        }
      }
      else {
        $result->content_cafe_selected_annotation = NULL;
      }
    }
  }

  // Selected Biography field.
  if (isset($view->field['content_cafe_selected_biography'])) {

    // Get a list of nodes so the data can be selected in a bulk fashion.
    $nids = array();
    foreach ($view->result as $result) {
      $nids[] = $result->nid;
    }
    $biographies = nnels_content_cafe_select_multiple_content_cafe_biography_rows_by_nids($nids);
    
    // Update the results with the data.
    foreach ($view->result as $result) {
      if (isset($biographies[$result->nid])) {
        foreach ($biographies[$result->nid] as $biography) {
          if ($biography->selected) {
            $result->content_cafe_selected_biography = $biography->biography;
          }
        }
      }
      else {
        $result->content_cafe_selected_biography = NULL;
      }
    }
  }

  // Selected Excerpt field.
  if (isset($view->field['content_cafe_selected_excerpt'])) {

    // Get a list of nodes so the data can be selected in a bulk fashion.
    $nids = array();
    foreach ($view->result as $result) {
      $nids[] = $result->nid;
    }
    $excerpts = nnels_content_cafe_select_multiple_content_cafe_excerpt_rows_by_nids($nids);
    
    // Update the results with the data.
    foreach ($view->result as $result) {
      if (isset($excerpts[$result->nid])) {
        foreach ($excerpts[$result->nid] as $excerpt) {
          if ($excerpt->selected) {
            $result->content_cafe_selected_excerpt = $excerpt->excerpt;
          }
        }
      }
      else {
        $result->content_cafe_selected_excerpt = NULL;
      }
    }
  }

  // Selected Flap field.
  if (isset($view->field['content_cafe_selected_flap'])) {

    // Get a list of nodes so the data can be selected in a bulk fashion.
    $nids = array();
    foreach ($view->result as $result) {
      $nids[] = $result->nid;
    }
    $flaps = nnels_content_cafe_select_multiple_content_cafe_flap_rows_by_nids($nids);
    
    // Update the results with the data.
    foreach ($view->result as $result) {
      if (isset($flaps[$result->nid])) {
        foreach ($flaps[$result->nid] as $flap) {
          if ($flap->selected) {
            $result->content_cafe_selected_flap = $flap->flap;
          }
        }
      }
      else {
        $result->content_cafe_selected_flap = NULL;
      }
    }
  }

  // Selected Jacket field.
  if (isset($view->field['content_cafe_selected_jacket'])) {

    // Get a list of nodes so the data can be selected in a bulk fashion. Any
    // contextual filters will come in as args. It is possible that the view
    // results will not have a node id.
    $nids = $view->args;
    foreach ($view->result as $result) {
      $nids[] = $result->nid;
    }

    $jackets = nnels_content_cafe_select_multiple_content_cafe_jacket_rows_by_nids($nids);

    // Update the results with the data.
    foreach ($view->result as $result) {

      // result has a nid.
      if (isset($jackets[$result->nid])) {
        foreach ($jackets[$result->nid] as $jacket) {
          if ($jacket->selected) {
            $file = file_load($jacket->fid);

            // No image style.
            if (empty($view->field['content_cafe_selected_jacket']->options['image_style'])) {
              $result->content_cafe_selected_jacket = theme(
                'image',
                array(
                  'path' => file_create_url($file->uri),
                )
              );
            }

            // Apply the image style if applicable
            else {
              $derivative_uri = image_style_path($view->field['content_cafe_selected_jacket']->options['image_style'], $file->uri);
              image_style_create_derivative(image_style_load($view->field['content_cafe_selected_jacket']->options['image_style']), $file->uri, $derivative_uri);
              $derivative_url = file_create_url($derivative_uri);
//              file_save_data($response, 's3://book-covers/' . $isbn . '.' . $extension, FILE_EXISTS_REPLACE);
print 'Image: ' . $file->uri . "\n\n";
print 'Image URL: ' . file_create_url($file->uri) . "\n\n";
print 'Image Style: ' . $view->field['content_cafe_selected_jacket']->options['image_style'] . "\n\n";
print 'Image Style URI: ' . $derivative_uri . "\n\n";
print 'Image Style URL: ' . $derivative_url . "\n\n";
              $result->content_cafe_selected_jacket = theme(
                'image_style',
                array(
                  'style_name' => $view->field['content_cafe_selected_jacket']->options['image_style'],
                  'path' => $derivative_uri,
                )
              );
print 'Rendered HTML: ' . $result->content_cafe_selected_jacket;exit;
            }
          }
        }
      }

      // contextual filter.
      elseif (count($view->args)) {
        if (isset($jackets[$view->args[0]])) {
          foreach ($jackets[$view->args[0]] as $jacket) {
            if ($jacket->selected) {
              $file = file_load($jacket->fid);
              $result->content_cafe_selected_jacket = theme(
                'image',
                array(
                  'path' => file_create_url($file->uri),
                )
              );
            }
          }
        }

        // default.
        else {
          $result->content_cafe_selected_jacket = NULL;
        }
      }

      // default.
      else {
        $result->content_cafe_selected_jacket = NULL;
      }
    }
  }

  // Selected TOC field.
  if (isset($view->field['content_cafe_selected_toc'])) {

    // Get a list of nodes so the data can be selected in a bulk fashion.
    $nids = array();
    foreach ($view->result as $result) {
      $nids[] = $result->nid;
    }
    $tocs = nnels_content_cafe_select_multiple_content_cafe_toc_rows_by_nids($nids);
    
    // Update the results with the data.
    foreach ($view->result as $result) {
      if (isset($tocs[$result->nid])) {
        foreach ($tocs[$result->nid] as $toc) {
          if ($toc->selected) {
            $result->content_cafe_selected_toc = $toc->toc;
          }
        }
      }
      else {
        $result->content_cafe_selected_toc = NULL;
      }
    }
  }
}

/**
 * Deliver Image Derivatives. Assumes S3 as the source and destination.
 */
function nnels_content_cafe_image_deliver() {
  $args = func_get_args();
  
  // Not enough args.
  if (count($args) < 4) {
    return MENU_NOT_FOUND;
  }
  
  // Working vars.
  $image_style     = array_shift($args);
  $file_system     = array_shift($args);
  $image_name      = array_pop($args);
  $image_path      = implode('/', $args);
  $source          = $file_system . '://' . $image_path . '/' . $image_name;
  $source_url      = file_create_url($source);
  $destination     = $file_system . '://' . $image_path . '/image_style_' . $image_style['name'] . '_' . $image_name;
  $destination_url = file_create_url($destination);
  $temp            = 'temporary://' . $file_system . '/' . $image_name;
  $temp_derivative = 'temporary://' . $file_system . '/' . $image_style['name'] . '/' . $image_name;
  $cid             = bsae64encode($source);
  if ($cached = cache_get($cid, 'cache_nnels_content_cafe')) {
    
    // Redirect to the image.
    drupal_goto($destination_url, array(), 301);
  }
  else {
 
    // Download the source image and create the temp file.
    $data = file_get_contents($source_url);
    file_unmanaged_save_data($data, $temp);
  
    // Transform the image.
    image_style_create_derivative($image_style, $temp, $temp_derivative);
  
    // Copy from the temp folder to destination.
    $image = image_load($temp_derivative);
    file_unmanaged_copy($image->source, $destination);

    // Set the cache value so the image derivative is not repeatedly created.
    cache_set($cid, TRUE, 'cache_nnels_content_cafe');
    
    // Deliver the image.
    file_transfer($image->source, array('Content-Type' => $image->info['mime_type'], 'Content-Length' => $image->info['file_size']));
  }
}